<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hello.common.UimsMapper">
	<resultMap type = "com.hello.uims.model.DTO.StudentDTO" id = "studentResultMap">
		<id property = "studentNo" column = "STUDENT_NO"/>
		<result property = "deptCode" column = "DEPT_CODE"/>
		<result property = "studentId" column = "STUDENT_ID"/>
		<result property = "studentPwd" column = "STUDENT_PWD"/>
		<result property = "studentName" column = "STUDENT_NAME"/>
		<result property = "address" column = "ADDRESS"/>
		<result property = "studentTelNo" column = "STUDENT_TELNO"/>
		<result property = "email" column = "EMAIL"/>
		<result property = "enrollDate" column = "ENROLL_DATE"/>
		<result property = "status" column = "STATUS"/>
	</resultMap>
	<resultMap type="com.hello.uims.model.DTO.GradeDTO"
		id="gradeResultMap">
		<result property="lectureName" column="LECTURE_NAME" />
		<result property="profName" column="PROF_NAME" />
		<result property="studentNo" column="STUDENT_NO" />
		<result property="studentName" column="STUDENT_NAME" />
		<result property="attScore" column="ATT_SCORE" />
		<result property="assScore" column="ASS_SCORE" />
		<result property="midScore" column="MID_SCORE" />
		<result property="finScore" column="FIN_SCORE" />
		<result property="grade" column="GRADE" />
	</resultMap>
	<resultMap type="com.hello.uims.model.DTO.LectureDTO"
		id="lectureResultMap">
		<id property="lectureNo" column="LECTURE_NO" />
		<result property="deptCode" column="DEPT_CODE" />
		<result property="profName" column="PROF_NAME" />
		<result property="profNo" column="PROF_NO" />
		<result property="lectureName" column="LECTURE_NAME" />
		<result property="credit" column="CREDIT" />
		<result property="currNo" column="CURR_NO" />
		<result property="fullNo" column="FULL_NO" />
		<result property="day" column="DAY" />
		<result property="time" column="TIME" />
	</resultMap>
	<resultMap type="com.hello.uims.model.DTO.EnrollmentDTO"
		id="enrollmentResultMap">
		<id property="enrollId" column="ENROLL_ID" />
		<result property="studentNo" column="STUDENT_NO" />
		<result property="lectureNo" column="LECTURE_NO" />
	</resultMap>
	<!-- 확인 -->
	<resultMap type="com.hello.uims.model.DTO.EnrollmentDTO"
		id="timeTableResultMap">
		<id property="enrollId" column="ENROLL_ID" />
		<result property="studentNo" column="STUDENT_NO" />
		<result property="lectureNo" column="LECTURE_NO" />
		<result property="day" column="DAY" />
		<result property="firstClass" column="FIRST_CLASS" />
		<result property="secondClass" column="SECOND_CLASS" />
	</resultMap>
	<select id = "selectLogin" parameterType = "hashmap" resultMap = "studentResultMap">
		SELECT
			   STUDENT_PWD
		  FROM STUDENT
		 WHERE STUDENT_ID = #{ studentId }
	</select>
	<!-- 수강신청 강의목록 조회 -->
	<select id="selectAllLecture" parameterType="hashmap"
		resultMap="lectureResultMap">
		SELECT
		A.DEPT_CODE,
		A.LECTURE_NO,
		A.PROF_NO,
		B.PROF_NAME,
		A.LECTURE_NAME,
		A.CREDIT,
		A.CURR_NO,
		A.FULL_NO,
		A.DAY,
		A.TIME
		FROM LECTURE A
		JOIN PROFESSOR B ON A.PROF_NO = B.PROF_NO
		ORDER BY LECTURE_NO
	</select>
	<!-- 수강신청 -->
	<insert id="enroll" parameterType="hashmap">
		INSERT INTO ENROLLMENT
		VALUES
		(
		SEQ_ENROLL_NO.NEXTVAL,
		#{ studentNo },
		#{ lectureNo }
		)
	</insert>
	<!-- 수강신청 내역 -->
	<select id="selectEnroll" parameterType="hashmap" resultMap="lectureResultMap">
		SELECT
		B.DEPT_CODE,
		B.LECTURE_NO,
		B.PROF_NO,
		C.PROF_NAME,
		B.LECTURE_NAME,
		B.CREDIT,
		B.CURR_NO,
		B.FULL_NO,
		B.DAY,
		B.TIME
		FROM ENROLLMENT A
		JOIN LECTURE B ON A.LECTURE_NO = B.LECTURE_NO
		JOIN PROFESSOR C ON B.PROF_NO = C.PROF_NO
		WHERE 1 = 1
		AND STUDENT_NO = #{ studentNo }
		ORDER BY LECTURE_NO
	</select>
	<!-- 수강신청 취소 -->
	<delete id="deleteEnroll" parameterType="hashmap">
		DELETE 
		FROM ENROLLMENT
		WHERE 1 = 1
		AND STUDENT_NO = #{ studentNo } 
		AND LECTURE_NO = #{ lectureNo }
	</delete>
	<!-- 시간표 -->
	<select id="timeTable" parameterType="hashmap" resultMap="timeTableResultMap">
		SELECT
			A.STUDENT_NO, 
			A.LECTURE_NO, 
			A.DAY, 
			A.FIRST_CLASS, 
			A.SECOND_CLASS
		FROM V_ENROLLMENT_LECTURE A
		WHERE 1 = 1
		AND A.STUDENT_NO = #{ studentNo }
	</select>
	<select id="selectGradeCheck" parameterType="hashmap" resultMap="gradeResultMap">
		SELECT
		A.LECTURE_NAME,
		A.PROF_NAME,
		A.STUDENT_NO,
		A.STUDENT_NAME,
		A.ATT_SCORE,
		A.ASS_SCORE,
		A.MID_SCORE,
		A.FIN_SCORE,
		A.GRADE
		FROM VIEW_GRADE_CHECK A
		JOIN GRADE B ON A.STUDENT_NO = B.STUDENT_NO
		WHERE A.STUDENT_NO = #{ studentNo }
		<if test = "profNo != null">
			AND B.PROF_NO = #{ profNo }
		</if>
		<if test = "lectureNo != null">
			AND B.LECTURE_NO = #{ lectureNo }
		</if>
	</select>
	<select id="selectGrade" parameterType="hashmap"
		resultMap="gradeResultMap">
		SELECT
			   A.LECTURE_NAME,
			   A.PROF_NAME,
			   A.STUDENT_NO,
			   A.STUDENT_NAME,
			   A.ATT_SCORE,
			   A.ASS_SCORE,
			   A.MID_SCORE,
			   A.FIN_SCORE,
			   A.GRADE
		  FROM VIEW_GRADE_CHECK A
		  JOIN GRADE B ON A.STUDENT_NO = B.STUDENT_NO
		 WHERE B.PROF_NO = #{ profNo }
		   AND B.LECTURE_NO = #{ lectureNo }
	</select>
	<select id="selectByProfNo" parameterType="_int"
		resultMap="lectureResultMap">
		SELECT
		   	   A.DEPT_CODE, 
			   A.LECTURE_NO, 
			   A.PROF_NO, 
			   B.PROF_NAME, 
			   A.LECTURE_NAME, 
			   A.CREDIT, 
			   A.CURR_NO, 
			   A.FULL_NO, 
			   A.DAY, 
			   A.TIME
	 	  FROM LECTURE A
	 	  JOIN PROFESSOR B ON A.PROF_NO = B.PROF_NO
	 	 WHERE A.PROF_NO = #{ profNo }
	</select>
	<select id="selectStudentList" parameterType="hashmap"
		resultMap="enrollmentResultMap">
		SELECT
			   A.LECTURE_NO,
			   A.STUDENT_NO
		  FROM ENROLLMENT A
		  JOIN LECTURE B ON A.LECTURE_NO = B.LECTURE_NO
	 	 WHERE B.LECTURE_NO = #{ lectureNo }
	 	   AND B.PROF_NO = #{ profNo }
	 	 ORDER BY A.STUDENT_NO
	</select>
	<insert id="insertScores" parameterType="hashmap">
		INSERT INTO GRADE
			(
			GRADE_NO,
			LECTURE_NO,
			PROF_NO,
			STUDENT_NO,
			ATT_SCORE,
			ASS_SCORE,
			MID_SCORE,
			FIN_SCORE,
			GRADE
			)
			VALUES
			(
			SEQ_GRADE_NO.NEXTVAL, 
			#{ lectureNo }, 
			#{ profNo }, 
			#{ studentNo }, 
			#{ attScore }, 
			#{ assScore }, 
			#{ midScore }, 
			#{ finScore }, 
			DEFAULT
			)
	</insert>
	<update id="updateFinGrade" parameterType="hashmap">
		UPDATE GRADE A
		   SET A.GRADE = #{	grade }
		 WHERE A.STUDENT_NO = #{ studentNo }
		   AND A.LECTURE_NO = #{ lectureNo }
		   AND A.PROF_NO = #{ profNo }
	</update>
	<update id="updateGrade" parameterType="hashmap">
		UPDATE GRADE
		SET ATT_SCORE = #{ attScore },
		ASS_SCORE = #{ assScore },
		MID_SCORE = #{ midScore },
		FIN_SCORE = #{ finScore }
		WHERE STUDENT_NO = #{ studentNo }
		AND LECTURE_NO = #{ lectureNo }
	</update>
	<delete id="deleteGrade" parameterType="hashmap">
		DELETE FROM GRADE
		WHERE PROF_NO = #{ profNo }
		AND STUDENT_NO = #{ studentNo }
		AND LECTURE_NO = #{ lectureNo }
	</delete>
	<insert id="inputJudgement" parameterType="hashmap">
	INSERT INTO GRADE
		(
		JUDGEMENT_NO,
		LECTURE_NO,
		STUDENT_NO,
		PROF_NO,
		STU_JUG_SCORE,
		STU_ONE_JUG
		)
		VALUES
		(
		SEQ_GRADE_NO,
		#{ judgementNo },
		#{ lectureNo },
		#{ studentNo },
		#{ profNo },
		#{ StuJugScore },
		#{ StuOneJug },
		DEFAULT
	</insert>
</mapper>
